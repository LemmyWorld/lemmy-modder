name: build-app

on:
  push:
    branches:
      - main
      - develop

jobs:

  build_app:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # cache frontend deps
      - name: Cache Frontend NPM Modules
        id: cache-frontend-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-frontend-npm
        with:
          path: ./frontend/node_modules/
          key: cache-frontend-npm-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-frontend-npm.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./frontend

      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

      - name: build
        run: |
          docker run --rm -i \
          --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS_TAG|TRAVIS|TRAVIS_REPO_|TRAVIS_BUILD_|TRAVIS_BRANCH|TRAVIS_PULL_REQUEST_|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \
          --env ELECTRON_CACHE="/root/.cache/electron" \
          --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
          --env GH_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          -v ${PWD}:/project \
          -v ${PWD##*/}-node-modules:/project/node_modules \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          bash -c "npm i && npm run build:win"

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: dist_electron
      #     path: dist_electron

      # - name: upload release asset
      #   if: github.event_name == 'release'
      #   run: |
      #     cd dist_electron
      #     for var in $(ls); do
      #         $GITHUB_WORKSPACE/.github/workflows/upload_github_release_asset.sh \
      #             owner=${{ github.repository_owner }} \
      #             repo=mqttx \
      #             tag=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g") \
      #             filename=$var \
      #             github_api_token=$(echo ${{ secrets.GITHUB_TOKEN }})
      #     done




      # - name: Use Node.js 18.15.0
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18.15.0

      # # App
      # - name: Cache App NPM Modules
      #   id: cache-app-npm
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-app-npm
      #   with:
      #     path: ./node_modules/
      #     key: cache-app-npm-${{ hashFiles('package-lock.json') }}

      # - name: Install App Dependencies
      #   if: steps.cache-app-npm.outputs.cache-hit != 'true'
      #   run: npm ci
      #   working-directory: ./

      # - name: Build App Win64
      #   run: npm run build:win

      # - name: Build App Win32
      #   run: npm run build:win32

      # store the json files as artifacts
      - name: Archive Built App
        uses: actions/upload-artifact@v3
        with:
          name: dist-installer
          path: |
            ./dist/*.exe
