name: build-app

on:
  push:
    branches:
      - main
      - develop

jobs:

  build_app:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # cache frontend deps
      - name: Cache Frontend NPM Modules
        id: cache-frontend-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-frontend-npm
        with:
          path: ./frontend/node_modules/
          key: cache-frontend-npm-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-frontend-npm.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./frontend

      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

      - name: build
        run: |
          docker run --rm -i \
          --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS_TAG|TRAVIS|TRAVIS_REPO_|TRAVIS_BUILD_|TRAVIS_BRANCH|TRAVIS_PULL_REQUEST_|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \
          --env ELECTRON_CACHE="/root/.cache/electron" \
          --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
          --env GH_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          -v ${PWD}:/project \
          -v ${PWD##*/}-node-modules:/project/node_modules \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          bash -c "npm i && npx electron-builder --win nsis portable --x64 --publish always"

      # store the json files as artifacts
      # - name: Archive Built App
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: dist-installer
      #     path: |
      #       ./dist/*.exe

      # - name: Generate release tag
      #   id: generate_release_tag
      #   uses: amitsingh-007/next-release-tag@v4.0.0
      #   with:
      #     github_token: ${{ github.token }}
      #     tag_prefix: 'v'
      #     tag_template: 'yyyy.mm.dd.i'

      # - name: Create Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ steps.generate_release_tag.outputs.next_release_tag }}
      #     name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}
      #     prerelease: false
      #     generate_release_notes: true
      #     fail_on_unmatched_files: true
      #     files: ./dist/*.exe
